{
  "version": 3,
  "sources": ["../../vue-codemirror6/dist/index.es.js"],
  "sourcesContent": ["/**\n * vue-codemirror6\n *\n * @description CodeMirror6 Component for vue2 and vue3.\n * @author Logue <logue@hotmail.co.jp>\n * @copyright 2022-2025 By Masashi Yoshikawa All rights reserved.\n * @license MIT\n * @version 1.3.17\n * @see {@link https://github.com/logue/vue-codemirror6}\n */\n\nimport { indentWithTab as W } from \"@codemirror/commands\";\nimport { indentUnit as G } from \"@codemirror/language\";\nimport { linter as P, lintGutter as Z, forceLinting as b, diagnosticCount as k } from \"@codemirror/lint\";\nimport { EditorState as s, Compartment as w, StateEffect as y, EditorSelection as C } from \"@codemirror/state\";\nimport { EditorView as r, keymap as q, placeholder as H } from \"@codemirror/view\";\nimport { basicSetup as K, minimalSetup as Q } from \"codemirror\";\nimport { isVue2 as X, h as O, defineComponent as Y, ref as v, shallowRef as ee, computed as c, watch as V, onMounted as te, nextTick as ae, onUnmounted as ne } from \"vue-demi\";\nconst me = {\n  version: \"1.3.17\",\n  date: \"2025-06-02T14:16:10.878Z\"\n}, le = (e) => e ? Object.entries(e).reduce((i, [l, u]) => (l = l.charAt(0).toUpperCase() + l.slice(1), l = `on${l}`, { ...i, [l]: u }), {}) : {};\nfunction B(e, i = {}, l) {\n  if (X)\n    return O(e, i, l);\n  const { props: u, domProps: t, on: d, ...f } = i, m = d ? le(d) : {};\n  return O(\n    e,\n    { ...f, ...u, ...t, ...m },\n    l\n  );\n}\nconst ie = (e) => typeof e == \"function\" ? e() : e;\nvar oe = Y({\n  /** Component Name */\n  name: \"CodeMirror\",\n  /** Model Definition */\n  model: {\n    prop: \"modelValue\",\n    event: \"update:modelValue\"\n  },\n  /** Props Definition */\n  props: {\n    /** Model value */\n    modelValue: {\n      type: String,\n      default: \"\"\n    },\n    /**\n     * Theme\n     *\n     * @see {@link https://codemirror.net/docs/ref/#view.EditorView^theme}\n     */\n    theme: {\n      type: Object,\n      default: () => ({})\n    },\n    /** Dark Mode */\n    dark: {\n      type: Boolean,\n      default: !1\n    },\n    /**\n     * Use Basic Setup\n     *\n     * @see {@link https://codemirror.net/docs/ref/#codemirror.basicSetup}\n     */\n    basic: {\n      type: Boolean,\n      default: !1\n    },\n    /**\n     * Use Minimal Setup (The basic setting has priority.)\n     *\n     * @see {@link https://codemirror.net/docs/ref/#codemirror.minimalSetup}\n     */\n    minimal: {\n      type: Boolean,\n      default: !1\n    },\n    /**\n     * Placeholder\n     *\n     * @see {@link https://codemirror.net/docs/ref/#view.placeholder}\n     */\n    placeholder: {\n      type: String,\n      default: void 0\n    },\n    /**\n     * Line wrapping\n     *\n     * An extension that enables line wrapping in the editor (by setting CSS white-space to pre-wrap in the content).\n     *\n     * @see {@link https://codemirror.net/docs/ref/#view.EditorView%5ElineWrapping}\n     */\n    wrap: {\n      type: Boolean,\n      default: !1\n    },\n    /**\n     * Allow tab key indent.\n     *\n     * @see {@link https://codemirror.net/examples/tab/}\n     */\n    tab: {\n      type: Boolean,\n      default: !1\n    },\n    /**\n     * Tab character\n     */\n    indentUnit: {\n      type: String,\n      default: void 0\n    },\n    /**\n     * Allow Multiple Selection.\n     *\n     * @see {@link https://codemirror.net/docs/ref/#state.EditorState^allowMultipleSelections}\n     */\n    allowMultipleSelections: {\n      type: Boolean,\n      default: !1\n    },\n    /**\n     * Tab size\n     *\n     * @see {@link https://codemirror.net/docs/ref/#state.EditorState^tabSize}\n     */\n    tabSize: {\n      type: Number,\n      default: void 0\n    },\n    /**\n     * Set line break (separetor) char.\n     *\n     * @see {@link https://codemirror.net/docs/ref/#state.EditorState^lineSeparator}\n     */\n    lineSeparator: {\n      type: String,\n      default: void 0\n    },\n    /**\n     * Readonly\n     *\n     * @see {@link https://codemirror.net/docs/ref/#state.EditorState^readOnly}\n     */\n    readonly: {\n      type: Boolean,\n      default: !1\n    },\n    /**\n     * Disable input.\n     *\n     * This is the reversed value of the CodeMirror editable.\n     * Similar to `readonly`, but setting this value to true disables dragging.\n     *\n     * @see {@link https://codemirror.net/docs/ref/#view.EditorView^editable}\n     */\n    disabled: {\n      type: Boolean,\n      default: !1\n    },\n    /**\n     * Additional Extension\n     *\n     * @see {@link https://codemirror.net/docs/ref/#state.Extension}\n     */\n    extensions: {\n      type: Array,\n      default: () => []\n    },\n    /**\n     * Language Phreses\n     *\n     * @see {@link https://codemirror.net/examples/translate/}\n     */\n    phrases: {\n      type: Object,\n      default: void 0\n    },\n    /**\n     * CodeMirror Language\n     *\n     * @see {@link https://codemirror.net/docs/ref/#language}\n     */\n    lang: {\n      type: Object,\n      default: void 0\n    },\n    /**\n     * CodeMirror Linter\n     *\n     * @see {@link https://codemirror.net/docs/ref/#lint.linter}\n     */\n    linter: {\n      type: Function,\n      default: void 0\n    },\n    /**\n     * Linter Config\n     *\n     * @see {@link https://codemirror.net/docs/ref/#lint.linter^config}\n     */\n    linterConfig: {\n      type: Object,\n      default: () => ({})\n    },\n    /**\n     * Forces any linters configured to run when the editor is idle to run right away.\n     *\n     * @see {@link https://codemirror.net/docs/ref/#lint.forceLinting}\n     */\n    forceLinting: {\n      type: Boolean,\n      default: !1\n    },\n    /**\n     * Show Linter Gutter\n     *\n     * An area to ðŸ”´ the lines with errors will be displayed.\n     * This feature is not enabled if `linter` is not specified.\n     *\n     * @see {@link https://codemirror.net/docs/ref/#lint.lintGutter}\n     */\n    gutter: {\n      type: Boolean,\n      default: !1\n    },\n    /**\n     * Gutter Config\n     *\n     * @see {@link https://codemirror.net/docs/ref/#lint.lintGutter^config}\n     */\n    gutterConfig: {\n      type: Object,\n      default: void 0\n    },\n    /**\n     * Using tag\n     */\n    tag: {\n      type: String,\n      default: \"div\"\n    },\n    /**\n     * Allows an external update to scroll the form.\n     * @see {@link https://codemirror.net/docs/ref/#state.TransactionSpec.scrollIntoView}\n     */\n    scrollIntoView: {\n      type: Boolean,\n      default: !0\n    }\n  },\n  /** Emits */\n  emits: {\n    /** Model Update */\n    \"update:modelValue\": (e = \"\") => !0,\n    /** CodeMirror ViewUpdate */\n    update: (e) => !0,\n    /** CodeMirror onReady */\n    ready: (e) => !0,\n    /** CodeMirror onFocus */\n    focus: (e) => !0,\n    /** State Changed */\n    change: (e) => !0,\n    /** CodeMirror onDestroy */\n    destroy: () => !0\n  },\n  /**\n   * Setup\n   *\n   * @param props  - Props\n   * @param context - Context\n   */\n  setup(e, i) {\n    const l = v(), u = v(e.modelValue), t = ee(new r()), d = c({\n      get: () => t.value.hasFocus,\n      set: (a) => {\n        a && t.value.focus();\n      }\n    }), f = c({\n      get: () => t.value.state.selection,\n      set: (a) => t.value.dispatch({ selection: a })\n    }), m = c({\n      get: () => t.value.state.selection.main.head,\n      set: (a) => t.value.dispatch({ selection: { anchor: a } })\n    }), M = c(\n      {\n        get: () => t.value.state.toJSON(),\n        set: (a) => t.value.setState(s.fromJSON(a))\n      }\n    ), S = v(0), h = v(0), g = c(() => {\n      const a = new w(), n = new w();\n      if (e.basic && e.minimal)\n        throw new Error(\n          \"[Vue CodeMirror] Both basic and minimal cannot be specified.\"\n        );\n      return [\n        // Toggle basic setup\n        e.basic && !e.minimal ? K : void 0,\n        // Toggle minimal setup\n        e.minimal && !e.basic ? Q : void 0,\n        // ViewUpdate event listener\n        r.updateListener.of((o) => {\n          i.emit(\"focus\", t.value.hasFocus), S.value = t.value.state.doc?.length, !(o.changes.empty || !o.docChanged) && (e.linter && (e.forceLinting && b(t.value), h.value = e.linter(t.value).length), i.emit(\"update\", o));\n        }),\n        // Toggle light/dark mode.\n        r.theme(e.theme, { dark: e.dark }),\n        // Toggle line wrapping\n        e.wrap ? r.lineWrapping : void 0,\n        // Indent with tab\n        e.tab ? q.of([W]) : void 0,\n        // Tab character\n        e.indentUnit ? G.of(e.indentUnit) : void 0,\n        // Allow Multiple Selections\n        s.allowMultipleSelections.of(e.allowMultipleSelections),\n        // Indent tab size\n        e.tabSize ? n.of(s.tabSize.of(e.tabSize)) : void 0,\n        // locale settings\n        e.phrases ? s.phrases.of(e.phrases) : void 0,\n        // Readonly option\n        s.readOnly.of(e.readonly),\n        // Editable option\n        r.editable.of(!e.disabled),\n        // Set Line break char\n        e.lineSeparator ? s.lineSeparator.of(e.lineSeparator) : void 0,\n        // Lang\n        e.lang ? a.of(e.lang) : void 0,\n        // Append Linter settings\n        e.linter ? P(e.linter, e.linterConfig) : void 0,\n        // Show ðŸ”´ to error line when linter enabled.\n        e.linter && e.gutter ? Z(e.gutterConfig) : void 0,\n        // Placeholder\n        e.placeholder ? H(e.placeholder) : void 0,\n        // Append Extensions\n        ...e.extensions\n      ].filter((o) => !!o);\n    });\n    V(\n      g,\n      (a) => t.value?.dispatch({ effects: y.reconfigure.of(a) }),\n      { immediate: !0 }\n    ), V(\n      () => e.modelValue,\n      async (a) => {\n        if (t.value.composing || // IME fix\n        t.value.state.doc.toJSON().join(e.lineSeparator ?? `\n`) === a)\n          return;\n        const n = !t.value.state.selection.ranges.every(\n          (o) => o.anchor < a.length && o.head < a.length\n        );\n        t.value.dispatch({\n          changes: { from: 0, to: t.value.state.doc.length, insert: a },\n          selection: n ? { anchor: 0, head: 0 } : t.value.state.selection,\n          scrollIntoView: e.scrollIntoView\n        });\n      },\n      { immediate: !0 }\n    ), te(async () => {\n      let a = u.value;\n      l.value && (l.value.childNodes[0] && (u.value !== \"\" && console.warn(\n        \"[CodeMirror.vue] The <code-mirror> tag contains child elements that overwrite the `v-model` values.\"\n      ), a = l.value.childNodes[0].innerText.trim()), t.value = new r({\n        parent: l.value,\n        state: s.create({ doc: a, extensions: g.value }),\n        dispatch: (n) => {\n          t.value.update([n]), !(n.changes.empty || !n.docChanged) && (i.emit(\"update:modelValue\", n.state.doc.toString()), i.emit(\"change\", n.state));\n        }\n      }), await ae(), i.emit(\"ready\", {\n        view: t.value,\n        state: t.value.state,\n        container: l.value\n      }));\n    }), ne(() => {\n      t.value.destroy(), i.emit(\"destroy\");\n    });\n    const $ = () => {\n      !e.linter || !t.value || (e.forceLinting && b(t.value), h.value = k(t.value.state));\n    }, j = () => {\n      t.value?.dispatch({\n        effects: y.reconfigure.of([])\n      }), t.value?.dispatch({\n        effects: y.appendConfig.of(g.value)\n      });\n    }, x = (a, n) => t.value.state.sliceDoc(a, n), _ = (a) => t.value.state.doc.line(a + 1).text, L = () => t.value.state.doc.lines, N = () => t.value.state.selection.main.head, U = () => {\n      let a;\n      return (a = t.value.state.selection.ranges) !== null && a !== void 0 ? a : [];\n    }, z = () => {\n      let a;\n      return (a = t.value.state.sliceDoc(\n        t.value.state.selection.main.from,\n        t.value.state.selection.main.to\n      )) !== null && a !== void 0 ? a : \"\";\n    }, E = () => {\n      const a = t.value.state;\n      return a ? a.selection.ranges.map(\n        (n) => a.sliceDoc(n.from, n.to)\n      ) : [];\n    }, R = () => t.value.state.selection.ranges.some(\n      (a) => !a.empty\n    ), T = (a, n, o) => t.value.dispatch({\n      changes: { from: n, to: o, insert: a }\n    }), D = (a) => t.value.dispatch(t.value.state.replaceSelection(a)), F = (a) => t.value.dispatch({ selection: { anchor: a } }), I = (a, n) => t.value.dispatch({ selection: { anchor: a, head: n } }), J = (a, n) => t.value.dispatch({\n      selection: C.create(a, n)\n    }), A = (a) => t.value.dispatch({\n      selection: C.create(\n        f.value.ranges.map((n) => n.extend(a(n)))\n      )\n    }), p = {\n      editor: l,\n      view: t,\n      cursor: m,\n      selection: f,\n      focus: d,\n      length: S,\n      json: M,\n      diagnosticCount: h,\n      dom: t.value.contentDOM,\n      lint: $,\n      forceReconfigure: j,\n      // Bellow is CodeMirror5's function\n      getRange: x,\n      getLine: _,\n      lineCount: L,\n      getCursor: N,\n      listSelections: U,\n      getSelection: z,\n      getSelections: E,\n      somethingSelected: R,\n      replaceRange: T,\n      replaceSelection: D,\n      setCursor: F,\n      setSelection: I,\n      setSelections: J,\n      extendSelectionsBy: A\n    };\n    return i.expose(p), p;\n  },\n  render() {\n    return B(\n      this.$props.tag,\n      {\n        ref: \"editor\",\n        class: \"vue-codemirror\"\n      },\n      this.$slots.default ? (\n        // Hide original content\n        B(\n          \"aside\",\n          { style: \"display: none;\", \"aria-hidden\": \"true\" },\n          ie(this.$slots.default)\n        )\n      ) : void 0\n    );\n  }\n});\nconst he = (e) => e.component(\"CodeMirror\", oe);\nexport {\n  me as Meta,\n  oe as default,\n  he as install\n};\n"],
  "mappings": "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",
  "names": ["h"]
}
